{% extends "layout.njk" %}

{% block head %}
  <title>Nossos Alunos</title>
{% endblock %}

{% block content %}
  <div class="card table-container">
    <div class="header-table">
      <a class="button" href="/students/create">Novo</a>
      <form action="/students" method="GET">
        <input 
          type="text"
          name="filter"
          placeholder="Nome ou Email"
          value="{{ filter }}"
          >
          <button type="submit">Filtrar</button>
      </form>
    </div>
   <table>
     <thead>
       <tr>
         <th>Aluno</th>
         <th class="viewOptional">Email</th>
         <th class="viewOptional">Ano Escolar</th>
         <th>Ação</th>
       </tr>
     </thead>
     <tbody>
       {% for student in students %}
        <tr>
          <td>
            <span style="background-image: url({{ student.avatar_url }})"></span>
            {{ student.name }}
          </td>
          <td class="viewOptional">
            {{ student.email }}    
          </td>
          <td class="viewOptional">
            <span>{{ student.school_year }}</span>  
          </td>
          <td><a href="/students/{{ student.id }}">Detalhes</a></td>
        </tr>
       {% endfor %}
     </tbody>
   </table>
      <div class="pagination"
        data-page={{pagination.page}}
        data-total={{pagination.total}}
        data-filter={{filter}}
      ></div>
  </div>

  <script>

    function paginate(selectedPage, totalPages) {
      let pages = [],
        oldPage;

      for (let currentPage = 1; currentPage <= totalPages; currentPage++) {

        const firstAndLastPage = currentPage == 1 || currentPage == totalPages;
        const pagesAfterSelectedPage = currentPage <= selectedPage + 2;
        const pagesBeforeSelectedPage = currentPage >= selectedPage - 2;

        if (firstAndLastPage || pagesBeforeSelectedPage && pagesAfterSelectedPage) {
          if (oldPage && currentPage - oldPage > 2) {
            pages.push("...")
          }

          if (oldPage && currentPage - oldPage == 2) {
            pages.push(oldPage + 1)
          }

          pages.push(currentPage);

          oldPage = currentPage;
        }
      }
      return pages;
    }

    function createPagination(pagination) {
      const filter = pagination.dataset.filter;
      const page = Number(pagination.dataset.page);
      const total = Number(pagination.dataset.total);
      const pages = paginate(page, total);

      let elements = "";

      for (let page of pages) {
        if(String(page).includes("...")) {
          elements += `<span>${page}</span>`
        } else {

            if(filter) {
              elements += `<a href="?page=${page}&filter={{filter}}">${page}</a>`
            } else {
              elements += `<a href="?page=${page}">${page}</a>`
            }
          } 
      }
      pagination.innerHTML = elements;
    }

    const pagination = document.querySelector('.pagination')

    if(pagination) {
      createPagination(pagination);
    }
  </script>
{% endblock %}